#! /usr/bin/env ruby

require 'pg'

@expense_db = PG.connect(dbname:'project1')

@expenses = @expense_db.exec('SELECT * FROM expenses ORDER BY created_on')

@command = ARGV[0]


def display_list
  @expenses.each do |tuple|
    columns = [ tuple["id"].rjust(3),
                tuple["created_on"].rjust(10),
                tuple["amount"].rjust(12),
                tuple["memo"] ]
  
    puts columns.join(" | ")
  end
end

@help = <<~HELP 
Commands:\n
add AMOUNT MEMO - record a new expense
list - list all expenses
delete NUMBER - remove expense with id NUMBER
search QUERY - list expenses with a matching memo field
HELP

def display_help
  puts "An expense recording system\n\n"
  puts @help
end

def validate_add(command: ARGV)
  return 'Please enter a valid amount' unless command[1].to_f > 0.0
  case 
  when command.size == 1
    "You must specify an AMOUNT\n\n"
  when command.size == 2
    "You must specify a MEMO\n\n"
  when command.size >= 4
    "Your memo must be one word, or enclosed in \"double quotes\"\n\n"
  else
    false
  end
end

def add_expense(cost: ARGV[1], item:ARGV[2])
  error_help = validate_add
  
  if !error_help
    @expense_db.exec("INSERT INTO expenses(amount, memo) VALUES (#{cost}, '#{item}');")
  else
    puts error_help
    puts @help
  end
end

if !@command || @command.downcase == 'help'
  display_help
elsif @command.downcase == 'list'
  display_list
elsif @command.downcase == 'add'
  add_expense
else
  puts "Sorry, #{@command} is not valid"
end